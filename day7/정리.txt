1. MVC (웹 전용)
- back이 화면까지 가지고 있다
    (flask가 templetes폴더에 html을 가지고 있었다)
- 백은 html 또는 주소를 보내주고 프론트는 그대로 출력/이동
- 개발이 간편하다

2. REST 방식
- back과 front는 별개, 서로 대등, ajax로 연결
- 개발이 복잡하다
- 대신에 하나의 백으로 다양한 프론트와 연결하는 등 유연성이 뛰어나다

3. HTTP : 웹의 프로토콜(통신규약)
- http method : get과 post
    get - 서버의 정보가 변경 X -> 여러번 실행 가능
    post - 서버의 정보가 변경 - >한번만 실행해야(결제....
    )
- http 상태코드
    200 : 결과가 나왔다 (오류가 없었다)
    400 : 서버에서 수인을 거부
    403 : 권한 오류
    404 : not found
    405 : method 오류
    500 : 서버에서 처리도중 오류 발생

4. callbcak함수
- 함수를 위탁해서 실행ㅑ
- 이쁜처리 함수(이벤트 handler가 대표적.)

5. $.ajax()에서 서버로 넘기는 데이터는 urlencoded다
- username는 spring, pwd는 1234라면
    $.ajax({
        url:'서버주소',
        data : 'username=spring&pwd=1234'
    })
- $.ajax()는 data에 자바스크립트를 주면 자동으로 urlencoded 변환